@using System.Security.Claims;

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - APT Management</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/QLCCCC.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        body {
            background: linear-gradient(to right, #fdf6e4, #fef9f2);
            font-family: 'Arial', sans-serif;
            color: #5d4037;
            margin: 0;
            padding: 0;
            line-height: 1.6;
        }

        .navbar {
            background: #ffffff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 10px 20px;
            position: sticky;
            top: 0;
            z-index: 1000;
            transition: all 0.3s ease;
        }

            .navbar:hover {
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            }

        .navbar-brand {
            font-weight: 700;
            font-size: 2rem;
            color: #d35400 !important;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

            .navbar-brand:hover {
                color: #e67e22 !important;
                transform: scale(1.03);
            }

            .navbar-brand i {
                margin-right: 8px;
            }

        .nav-link {
            color: #5d4037 !important;
            font-weight: 500;
            padding: 8px 18px;
            text-transform: uppercase;
            font-size: 1.1rem;
            position: relative;
            transition: all 0.3s ease;
        }

            .nav-link:hover {
                color: #d35400 !important;
                background: #f5e6cc;
                border-radius: 5px;
            }

            .nav-link::after {
                content: '';
                position: absolute;
                width: 0;
                height: 2px;
                bottom: 4px;
                left: 18px;
                background: #d35400;
                transition: width 0.3s ease;
            }

            .nav-link:hover::after {
                width: calc(100% - 36px);
            }

        .navbar-center .nav-link {
            color: #d35400 !important;
        }

            .navbar-center .nav-link:hover {
                color: #e67e22 !important;
            }

        .navbar-text {
            color: #5d4037;
            font-size: 1rem;
            margin-right: 12px;
            font-style: italic;
        }

        .btn-sm {
            padding: 8px 16px;
            font-size: 1rem;
            border-radius: 25px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #e67e22, #d35400);
            border: none;
            color: #fff;
        }

            .btn-primary:hover {
                background: linear-gradient(135deg, #d35400, #c0392b);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            }

        .btn-danger {
            background: linear-gradient(135deg, #c0392b, #e74c3c);
            border: none;
            color: #fff;
        }

            .btn-danger:hover {
                background: linear-gradient(135deg, #e74c3c, #c0392b);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            }

        .navbar-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

        .navbar-center {
            display: flex;
            justify-content: center;
            flex-grow: 1;
        }

            .navbar-center .navbar-nav {
                display: flex;
                justify-content: center;
            }

        .content-wrapper {
            background: #ffffff;
            padding: 35px;
            border-radius: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            margin: 40px auto;
            max-width: 1300px;
            min-height: 70vh;
            transition: all 0.3s ease;
        }

            .content-wrapper:hover {
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            }

        .footer {
            background: linear-gradient(135deg, #5d4037, #8d5524);
            color: #f5e6cc;
            padding: 20px 0;
            font-size: 0.9rem;
            border-top: 3px solid #f5cba8;
            position: relative;
        }

            .footer .container {
                max-width: 1300px;
                margin: 0 auto;
            }

            .footer .row {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                align-items: flex-start;
                flex-wrap: wrap;
                gap: 15px;
            }

            .footer .contact-box, .footer .map-box, .footer .social-box {
                flex: 1;
                min-width: 200px;
                padding: 15px;
                text-align: center;
            }

                .footer .contact-box h2, .footer .map-box h3, .footer .social-box h3 {
                    color: #f5e6cc;
                    margin-bottom: 10px;
                    font-weight: 600;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 8px;
                }

                .footer .contact-box p {
                    margin-bottom: 10px;
                    font-size: 0.85rem;
                }

            .footer .contact-info {
                list-style: none;
                padding: 0;
            }

                .footer .contact-info li {
                    margin-bottom: 8px;
                    font-size: 0.85rem;
                }

                .footer .contact-info strong {
                    color: #e67e22;
                }

                .footer .contact-info a {
                    color: #f5e6cc;
                    text-decoration: none;
                    transition: color 0.3s ease;
                }

                    .footer .contact-info a:hover {
                        color: #e67e22;
                    }

            .footer .social-links {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 5px;
            }

            .footer .social-btn {
                display: flex;
                align-items: center;
                padding: 6px 12px;
                background: #ffffff;
                color: #5d4037;
                text-decoration: none;
                border-radius: 20px;
                font-size: 0.75rem;
                font-weight: 500;
                transition: all 0.3s ease;
            }

                .footer .social-btn i {
                    margin-right: 5px;
                    font-size: 0.9rem;
                }

                .footer .social-btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                }

                .footer .social-btn.instagram:hover {
                    background: #e1306c;
                    color: #fff;
                }

                .footer .social-btn.twitter:hover {
                    background: #1da1f2;
                    color: #fff;
                }

                .footer .social-btn.github:hover {
                    background: #333;
                    color: #fff;
                }

                .footer .social-btn.discord:hover {
                    background: #7289da;
                    color: #fff;
                }

            .footer .map-box iframe {
                width: 100%;
                height: 150px;
                border-radius: 10px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }

            .footer::before {
                content: '';
                position: absolute;
                top: -10px;
                left: 50%;
                transform: translateX(-50%);
                width: 50px;
                height: 2px;
                background: #e67e22;
            }

            .footer .copyright {
                text-align: center;
                margin-top: 15px;
                font-size: 0.75rem;
                color: #f5e6cc;
            }

                .footer .copyright a {
                    color: #e67e22;
                    text-decoration: none;
                    transition: color 0.3s ease;
                }

                    .footer .copyright a:hover {
                        color: #fff;
                    }

        /* Chatbot Styles */
        .chatbot-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(135deg, #e67e22, #d35400);
            color: #fff;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 1000;
        }

            .chatbot-button:hover {
                background: linear-gradient(135deg, #d35400, #c0392b);
                transform: scale(1.1);
                box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            }

            .chatbot-button i {
                font-size: 1.5rem;
            }

        .chatbot-window {
            position: fixed;
            bottom: 90px;
            right: 20px;
            width: 350px;
            max-height: 500px;
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            display: none;
            flex-direction: column;
            overflow: hidden;
            z-index: 1000;
            transition: all 0.3s ease;
        }

            .chatbot-window.open {
                display: flex;
            }

        .chatbot-header {
            background: linear-gradient(135deg, #e67e22, #d35400);
            color: #fff;
            padding: 10px 15px;
            font-size: 1.1rem;
            font-weight: 600;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .chatbot-header i {
                cursor: pointer;
            }

        .chatbot-body {
            flex-grow: 1;
            padding: 15px;
            overflow-y: auto;
            background: #f5e6cc;
        }

        .chatbot-message {
            margin-bottom: 10px;
            padding: 8px 12px;
            border-radius: 10px;
            max-width: 80%;
            font-size: 0.9rem;
            line-height: 1.4;
        }

            .chatbot-message.user {
                background: #d35400;
                color: #fff;
                margin-left: auto;
                border-bottom-right-radius: 2px;
            }

            .chatbot-message.bot {
                background: #ffffff;
                color: #5d4037;
                border-bottom-left-radius: 2px;
            }

            .chatbot-message.loading {
                background: #f5e6cc;
                color: #d35400;
                font-style: italic;
            }

            .chatbot-message.error {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }

        .chatbot-options {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }

        .chatbot-option-btn {
            background: #ffffff;
            color: #d35400;
            border: 1px solid #d35400;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .chatbot-option-btn:hover {
                background: #d35400;
                color: #fff;
                transform: translateY(-1px);
            }

        .chatbot-footer {
            padding: 10px;
            background: #ffffff;
            border-top: 1px solid #f5e6cc;
        }

        .chatbot-input {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #d35400;
            border-radius: 20px;
            font-size: 0.9rem;
            outline: none;
            transition: border-color 0.3s ease;
        }

            .chatbot-input:focus {
                border-color: #e67e22;
                box-shadow: 0 0 5px rgba(227, 126, 34, 0.3);
            }

        .chatbot-send-btn {
            background: #d35400;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            cursor: pointer;
            margin-left: 5px;
            transition: all 0.3s ease;
        }

            .chatbot-send-btn:hover {
                background: #e67e22;
                transform: translateY(-1px);
            }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light">
            <div class="container-fluid navbar-container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-building"></i> APT Management
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <div class="navbar-center">
                        <ul class="navbar-nav">
                            <li class="nav-item"><a class="nav-link" asp-controller="ChungCu" asp-action="Index">Chung Cư</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="CanHo" asp-action="Index">Căn Hộ</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="DichVu" asp-action="Index">Dịch Vụ</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="TinTuc" asp-action="Index">Tin Tức</a></li>
                            @if (User.Identity.IsAuthenticated)
                            {
                                var role = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value ?? "Khách";
                                if (role == "Cư dân")
                                {
                                    <li class="nav-item"><a class="nav-link" asp-controller="HoaDonDichVu" asp-action="Index">Hóa Đơn Dịch Vụ</a></li>
                                    <li class="nav-item"><a class="nav-link" asp-controller="PhanAnh" asp-action="Index">Phản Ánh</a></li>
                                }
                                else if (role == "Ban quản lý")
                                {
                                    <li class="nav-item"><a class="nav-link" asp-controller="CuDan" asp-action="Index">Cư Dân</a></li>
                                    <li class="nav-item"><a class="nav-link" asp-controller="NguoiDung" asp-action="Index">Người Dùng</a></li>
                                    <li class="nav-item"><a class="nav-link" asp-controller="HoaDonDichVu" asp-action="Index">Hóa Đơn Dịch Vụ</a></li>
                                    <li class="nav-item"><a class="nav-link" asp-controller="PhanAnh" asp-action="Index">Phản Ánh</a></li>
                                    <li class="nav-item"><a class="nav-link" asp-controller="ChuHo" asp-action="Index">Chủ Hộ</a></li>
                                }
                            }
                        </ul>
                    </div>
                    <ul class="navbar-nav ms-auto align-items-center">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <span class="navbar-text me-3">Xin chào, @User.Identity.Name!</span>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Auth" asp-action="UserProfile">
                                    <i class="fas fa-user-circle"></i> Tài khoản
                                </a>
                            </li>
                            <li class="nav-item">
                                <form asp-controller="Auth" asp-action="Logout" method="post" style="display:inline;">
                                    <button type="submit" class="btn btn-danger btn-sm">
                                        <i class="fas fa-sign-out-alt"></i> Đăng xuất
                                    </button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="btn btn-primary btn-sm" asp-controller="Auth" asp-action="Login">
                                    <i class="fas fa-sign-in-alt"></i> Đăng nhập
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <div class="content-wrapper">
            <main role="main" class="pb-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Chatbot Button -->
    <div class="chatbot-button" id="chatbotToggle">
        <i class="fas fa-comment-dots"></i>
    </div>

    <!-- Chatbot Window -->
    <div class="chatbot-window" id="chatbotWindow">
        <div class="chatbot-header">
            <span><i class="fas fa-robot"></i> APT Chatbot</span>
            <i class="fas fa-times" id="chatbotClose"></i>
        </div>
        <div class="chatbot-body" id="chatbotMessages">
            <!-- Danh sách tùy chọn sẽ được thêm động từ JavaScript -->
        </div>
        <div class="chatbot-footer">
            <input type="text" class="chatbot-input" id="chatbotInput" placeholder="Nhập câu hỏi hoặc chọn tùy chọn..." />
            <button class="chatbot-send-btn" id="chatbotSend">Gửi</button>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            const chatbotToggle = $('#chatbotToggle');
            const chatbotWindow = $('#chatbotWindow');
            const chatbotClose = $('#chatbotClose');
            const chatbotMessages = $('#chatbotMessages');
            const chatbotInput = $('#chatbotInput');
            const chatbotSend = $('#chatbotSend');
            let lastMessage = '';
            let lastChungCuName = '';

            // Gọi API để lấy danh sách tùy chọn ban đầu khi chatbot khởi động
            function initializeChatbot() {
                $.ajax({
                    url: '/api/ChatBot',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ Message: 'xin chào' }),
                    success: function (response) {
                        console.log('Initial backend response:', response);
                        displayBotResponse(response);
                    },
                    error: function (xhr, status, error) {
                        console.error('Initial AJAX error:', { status, error, xhr });
                        let errorMessage = 'Lỗi kết nối với server. Vui lòng thử lại sau.';
                        if (xhr.status === 500) {
                            errorMessage = 'Lỗi hệ thống: ' + (xhr.responseJSON?.reply || 'Không thể xử lý yêu cầu.');
                        }
                        chatbotMessages.append(`
                            <div class="chatbot-message error">${errorMessage}</div>
                        `);
                        scrollToBottom();
                    }
                });
            }

            // Toggle chatbot window
            chatbotToggle.click(function () {
                chatbotWindow.toggleClass('open');
                if (chatbotWindow.hasClass('open') && chatbotMessages.children().length === 0) {
                    initializeChatbot();
                }
            });

            chatbotClose.click(function () {
                chatbotWindow.removeClass('open');
            });

            // Send message
            function sendMessage(message) {
                if (!message.trim()) {
                    console.warn('Empty message input.');
                    chatbotMessages.append('<div class="chatbot-message error">Vui lòng nhập câu hỏi hoặc chọn một tùy chọn để tiếp tục.</div>');
                    scrollToBottom();
                    return;
                }

                if (message === lastMessage) {
                    console.warn('Duplicate message detected:', message);
                    chatbotMessages.append('<div class="chatbot-message error">Vui lòng chọn một tùy chọn khác hoặc nhập câu hỏi mới.</div>');
                    scrollToBottom();
                    return;
                }
                lastMessage = message;

                chatbotMessages.append(`
                    <div class="chatbot-message user">${message}</div>
                `);
                chatbotInput.val('');
                scrollToBottom();

                chatbotMessages.append(`
                    <div class="chatbot-message bot loading">Đang xử lý...</div>
                `);
                scrollToBottom();

                $.ajax({
                    url: '/api/ChatBot',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ Message: message }),
                    success: function (response) {
                        $('.chatbot-message.loading').remove();
                        console.log('Backend response:', response);
                        displayBotResponse(response);
                    },
                    error: function (xhr, status, error) {
                        $('.chatbot-message.loading').remove();
                        console.error('AJAX error:', { status, error, xhr });
                        let errorMessage = 'Lỗi kết nối với server. Vui lòng thử lại sau.';
                        if (xhr.status === 500) {
                            errorMessage = 'Lỗi hệ thống: ' + (xhr.responseJSON?.reply || 'Không thể xử lý yêu cầu.');
                        }
                        chatbotMessages.append(`
                            <div class="chatbot-message error">${errorMessage}</div>
                        `);
                        scrollToBottom();
                    }
                });
            }

            // Display bot response
            function displayBotResponse(response) {
                if (!response || !response.reply) {
                    console.error('Invalid or missing response:', response);
                    chatbotMessages.append(`
                        <div class="chatbot-message error">Phản hồi không hợp lệ từ server. Vui lòng thử lại.</div>
                    `);
                    scrollToBottom();
                    return;
                }

                const reply = response.reply;
                const options = response.options || [];
                chatbotMessages.append(`
                    <div class="chatbot-message bot">${reply}</div>
                `);

                // Cập nhật lastChungCuName
                const chungCuMatch = reply.match(/Thông tin chung cư ([^,]+): Địa chỉ:/);
                if (chungCuMatch) {
                    lastChungCuName = chungCuMatch[1].trim();
                    console.log('Updated lastChungCuName:', lastChungCuName);
                }

                // Hiển thị tùy chọn dưới dạng nút
                if (options.length > 0) {
                    let optionsHtml = '<div class="chatbot-options">';
                    options.forEach(opt => {
                        let displayText = opt;
                        if (opt.startsWith("Xem chung cư ")) {
                            displayText = opt.replace("Xem chung cư ", "");
                        } else if (opt.startsWith("Xem căn hộ ")) {
                            displayText = opt.split("thuộc")[0].replace("Xem căn hộ ", "");
                        } else if (opt.startsWith("Xem dịch vụ ")) {
                            displayText = opt.replace("Xem dịch vụ ", "");
                        } else if (opt.startsWith("Danh sách căn hộ của chung cư ")) {
                            displayText = "Danh sách căn hộ";
                        } else if (opt.startsWith("Tổng số căn hộ của chung cư ")) {
                            displayText = "Tổng số căn hộ";
                        }
                        optionsHtml += `<button class="chatbot-option-btn" data-value="${opt}">${displayText}</button>`;
                    });
                    optionsHtml += '</div>';
                    chatbotMessages.append(optionsHtml);

                    $('.chatbot-option-btn').off('click').on('click', function () {
                        const optionValue = $(this).attr('data-value');
                        console.log('Option selected:', optionValue);
                        sendMessage(optionValue);
                    });
                }

                scrollToBottom();
            }

            // Scroll to bottom of chat
            function scrollToBottom() {
                chatbotMessages.scrollTop(chatbotMessages[0].scrollHeight);
            }

            // Handle send button click
            chatbotSend.click(function () {
                sendMessage(chatbotInput.val());
            });

            // Handle Enter key press
            chatbotInput.on('keypress', function (e) {
                if (e.which === 13) {
                    sendMessage(chatbotInput.val());
                }
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>