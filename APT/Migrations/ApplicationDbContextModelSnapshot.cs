// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLCCCC.Data;

#nullable disable

namespace QLCCCC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLCCCC.Models.CanHo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("DienTich")
                        .HasColumnType("real");

                    b.Property<decimal>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_ChungCu")
                        .HasColumnType("int");

                    b.Property<string>("MaCan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoPhong")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.PrimitiveCollection<string>("URLs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_ChungCu");

                    b.HasIndex("MaCan", "ID_ChungCu")
                        .IsUnique();

                    b.ToTable("CanHos", t =>
                        {
                            t.HasCheckConstraint("CK_CanHo_TrangThai", "TrangThai IN (N'Đang bán', N'Đã bán', N'Cho thuê', N'Đã thuê')");
                        });
                });

            modelBuilder.Entity("QLCCCC.Models.ChuHo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_CanHo")
                        .HasColumnType("int");

                    b.Property<int>("ID_ChungCu")
                        .HasColumnType("int");

                    b.Property<int>("ID_CuDan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_CanHo");

                    b.HasIndex("ID_ChungCu");

                    b.HasIndex("ID_CuDan");

                    b.ToTable("ChuHos");
                });

            modelBuilder.Entity("QLCCCC.Models.ChungCu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ChuDauTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NamXayDung")
                        .HasColumnType("int");

                    b.Property<int?>("SoTang")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ChungCus");
                });

            modelBuilder.Entity("QLCCCC.Models.CuDan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_CanHo")
                        .HasColumnType("int");

                    b.Property<int?>("ID_ChungCu")
                        .HasColumnType("int");

                    b.Property<int>("ID_NguoiDung")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_CanHo");

                    b.HasIndex("ID_ChungCu");

                    b.HasIndex("ID_NguoiDung");

                    b.ToTable("CuDans", (string)null);
                });

            modelBuilder.Entity("QLCCCC.Models.DichVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("DichVus");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhCanHo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_CanHo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_CanHo");

                    b.ToTable("HinhAnhCanHos");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhChungCu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_ChungCu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_ChungCu");

                    b.ToTable("HinhAnhChungCus");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhDichVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_DichVu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_DichVu");

                    b.ToTable("HinhAnhDichVus");
                });

            modelBuilder.Entity("QLCCCC.Models.HoaDonDichVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_CanHo")
                        .HasColumnType("int");

                    b.Property<int>("ID_ChungCu")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ID_CanHo");

                    b.HasIndex("ID_ChungCu");

                    b.ToTable("HoaDonDichVus", t =>
                        {
                            t.HasCheckConstraint("CK_HoaDonDichVu_TrangThai", "TrangThai IN (N'Chưa thanh toán', N'Đã thanh toán')");
                        });
                });

            modelBuilder.Entity("QLCCCC.Models.HoaDonDichVu_DichVu", b =>
                {
                    b.Property<int>("ID_HoaDon")
                        .HasColumnType("int");

                    b.Property<int>("ID_DichVu")
                        .HasColumnType("int");

                    b.HasKey("ID_HoaDon", "ID_DichVu");

                    b.HasIndex("ID_DichVu");

                    b.ToTable("HoaDonDichVu_DichVus");
                });

            modelBuilder.Entity("QLCCCC.Models.NguoiDung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CuDanID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CuDanID");

                    b.ToTable("NguoiDungs", t =>
                        {
                            t.HasCheckConstraint("CK_NguoiDung_LoaiNguoiDung", "LoaiNguoiDung IN (N'Cư dân', N'Ban quản lý', N'Khách')");
                        });
                });

            modelBuilder.Entity("QLCCCC.Models.PhanAnh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_NguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhanHoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TinTucID")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_NguoiDung");

                    b.HasIndex("TinTucID");

                    b.ToTable("PhanAnhs", t =>
                        {
                            t.HasCheckConstraint("CK_PhanAnh_TrangThai", "TrangThai IN (0, 1, 2)");
                        });
                });

            modelBuilder.Entity("QLCCCC.Models.TinTuc", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySuKien")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("TinTucs");
                });

            modelBuilder.Entity("QLCCCC.Models.CanHo", b =>
                {
                    b.HasOne("QLCCCC.Models.ChungCu", "ChungCu")
                        .WithMany("CanHos")
                        .HasForeignKey("ID_ChungCu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChungCu");
                });

            modelBuilder.Entity("QLCCCC.Models.ChuHo", b =>
                {
                    b.HasOne("QLCCCC.Models.CanHo", "CanHo")
                        .WithMany()
                        .HasForeignKey("ID_CanHo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.ChungCu", "ChungCu")
                        .WithMany()
                        .HasForeignKey("ID_ChungCu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.CuDan", "CuDan")
                        .WithMany()
                        .HasForeignKey("ID_CuDan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CanHo");

                    b.Navigation("ChungCu");

                    b.Navigation("CuDan");
                });

            modelBuilder.Entity("QLCCCC.Models.CuDan", b =>
                {
                    b.HasOne("QLCCCC.Models.CanHo", "CanHo")
                        .WithMany()
                        .HasForeignKey("ID_CanHo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.ChungCu", "ChungCu")
                        .WithMany()
                        .HasForeignKey("ID_ChungCu")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("QLCCCC.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ID_NguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CanHo");

                    b.Navigation("ChungCu");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhCanHo", b =>
                {
                    b.HasOne("QLCCCC.Models.CanHo", "CanHo")
                        .WithMany("HinhAnhCanHos")
                        .HasForeignKey("ID_CanHo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CanHo");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhChungCu", b =>
                {
                    b.HasOne("QLCCCC.Models.ChungCu", "ChungCu")
                        .WithMany("HinhAnhChungCus")
                        .HasForeignKey("ID_ChungCu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChungCu");
                });

            modelBuilder.Entity("QLCCCC.Models.HinhAnhDichVu", b =>
                {
                    b.HasOne("QLCCCC.Models.DichVu", "DichVu")
                        .WithMany("HinhAnhDichVus")
                        .HasForeignKey("ID_DichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");
                });

            modelBuilder.Entity("QLCCCC.Models.HoaDonDichVu", b =>
                {
                    b.HasOne("QLCCCC.Models.CanHo", "CanHo")
                        .WithMany()
                        .HasForeignKey("ID_CanHo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.ChungCu", "ChungCu")
                        .WithMany()
                        .HasForeignKey("ID_ChungCu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CanHo");

                    b.Navigation("ChungCu");
                });

            modelBuilder.Entity("QLCCCC.Models.HoaDonDichVu_DichVu", b =>
                {
                    b.HasOne("QLCCCC.Models.DichVu", "DichVu")
                        .WithMany("HoaDonDichVu_DichVus")
                        .HasForeignKey("ID_DichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.HoaDonDichVu", "HoaDonDichVu")
                        .WithMany("HoaDonDichVu_DichVus")
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("HoaDonDichVu");
                });

            modelBuilder.Entity("QLCCCC.Models.NguoiDung", b =>
                {
                    b.HasOne("QLCCCC.Models.CuDan", "CuDan")
                        .WithMany()
                        .HasForeignKey("CuDanID");

                    b.Navigation("CuDan");
                });

            modelBuilder.Entity("QLCCCC.Models.PhanAnh", b =>
                {
                    b.HasOne("QLCCCC.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("ID_NguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCCCC.Models.TinTuc", null)
                        .WithMany("DanhSachPhanAnh")
                        .HasForeignKey("TinTucID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("QLCCCC.Models.CanHo", b =>
                {
                    b.Navigation("HinhAnhCanHos");
                });

            modelBuilder.Entity("QLCCCC.Models.ChungCu", b =>
                {
                    b.Navigation("CanHos");

                    b.Navigation("HinhAnhChungCus");
                });

            modelBuilder.Entity("QLCCCC.Models.DichVu", b =>
                {
                    b.Navigation("HinhAnhDichVus");

                    b.Navigation("HoaDonDichVu_DichVus");
                });

            modelBuilder.Entity("QLCCCC.Models.HoaDonDichVu", b =>
                {
                    b.Navigation("HoaDonDichVu_DichVus");
                });

            modelBuilder.Entity("QLCCCC.Models.TinTuc", b =>
                {
                    b.Navigation("DanhSachPhanAnh");
                });
#pragma warning restore 612, 618
        }
    }
}
